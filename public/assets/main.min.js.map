{"version":3,"sources":["main.js","game.js"],"names":["game","init","this","cacheDOM","actions","play","sequence","userSeq","min","max","counter","round","sim","random","Math","floor","$board","$","$audio1","find","$audio2","$audio3","$audio4","$start","$restart","on","bind","sound","event","num","target","attr","slice","trigger","console","log","push","x","i","_this","setTimeout","document","ready"],"mappings":"AAAA,YCAA,IAAIA,OACAC,KAAI,WACAC,KAAKC,WACLD,KAAKE,WAITC,KAAI,WACAH,KAAKI,YACLJ,KAAKK,WACLL,KAAKM,IAAM,EACXN,KAAKO,IAAM,EACXP,KAAKQ,QAAU,EACfR,KAAKS,MAAQ,EACbT,KAAKU,OAGTC,OAAM,WACF,MAAOC,MAAKC,MAAMD,KAAKD,UAAYX,KAAKO,IAAMP,KAAKM,IAAM,IAAMN,KAAKM,KAGxEL,SAAQ,WACJD,KAAKc,OAAWC,EAAE,eAClBf,KAAKgB,QAAWhB,KAAKc,OAAOG,KAAK,WACjCjB,KAAKkB,QAAWlB,KAAKc,OAAOG,KAAK,WACjCjB,KAAKmB,QAAWnB,KAAKc,OAAOG,KAAK,WACjCjB,KAAKoB,QAAWpB,KAAKc,OAAOG,KAAK,WACjCjB,KAAKqB,OAAWrB,KAAKc,OAAOG,KAAK,UACjCjB,KAAKsB,SAAWtB,KAAKc,OAAOG,KAAK,aAGrCf,QAAO,WACHF,KAAKqB,OAAOE,GAAG,QAASvB,KAAKG,KAAKqB,KAAK1B,OACvCE,KAAKc,OAAOS,GAAG,YAAa,QAASvB,KAAKyB,MAAMD,KAAK1B,QAGzD2B,MAAK,SAACC,GAEF,GAAIC,GAAOZ,EAAEW,EAAME,QAAQC,KAAK,MAAMC,MAAM,GAC5C9B,MAAK,SAAW2B,GAAKI,QAAQ,QAC7B/B,KAAKQ,SAAW,EAChBwB,QAAQC,IAAIjC,KAAKQ,SACjBR,KAAKK,QAAQ6B,KAAKP,IAItBQ,EAAC,SAACC,GDCE,GAAIC,GAAQrC,ICATA,MAAKI,SAASgC,KACbpC,KAAK,SAAWA,KAAKI,SAASgC,IAAIL,QAAQ,QAC1C/B,KAAKQ,UACLwB,QAAQC,IAAI,cAAeG,GAC3BE,WAAW,WACPD,EAAK3B,IAAI0B,EAAE,GACXJ,QAAQC,IAAI,cAAeG,IAC5B,OAIX1B,IAAG,WACCV,KAAKI,SAAS8B,KAAKlC,KAAKW,UACxBX,KAAKmC,EAAE,IAMfpB,GAAEwB,UAAUC,MAAM,WAGd1C,KAAKC","file":"main.min.js","sourcesContent":["","let game = {\n    init() {\n        this.cacheDOM();\n        this.actions();\n    },\n\n\n    play() {\n        this.sequence = [];\n        this.userSeq = [];\n        this.min = 1;\n        this.max = 4;\n        this.counter = 5; // increase this each time\n        this.round = 0;\n        this.sim();\n    },\n\n    random() {\n        return Math.floor(Math.random() * (this.max - this.min + 1)) + this.min;\n    },\n\n    cacheDOM() {\n        this.$board   = $('#game-board');\n        this.$audio1  = this.$board.find('#audio1');\n        this.$audio2  = this.$board.find('#audio2');\n        this.$audio3  = this.$board.find('#audio3');\n        this.$audio4  = this.$board.find('#audio4');\n        this.$start   = this.$board.find('#start');\n        this.$restart = this.$board.find('#restart');\n    },\n\n    actions() {\n        this.$start.on('click', this.play.bind(game));\n        this.$board.on('mousedown', 'input', this.sound.bind(game));\n    },\n\n    sound(event) {\n        // console.log(this.id.slice(-1);\n        let num = ($(event.target).attr('id').slice(-1));\n        this['$audio' + num].trigger('play');\n        this.counter += 2;\n        console.log(this.counter);\n        this.userSeq.push(num);\n\n    },\n\n    x(i) {\n        if(this.sequence[i]) {\n            this['$audio' + this.sequence[i]].trigger('play');\n            this.counter--; // will stop the sim each round\n            console.log('i is this: ' +i);\n            setTimeout(() => {\n                this.sim(i+1);\n                console.log('i is this: ' +i);\n            }, 1000);\n        }\n    },\n\n    sim() {\n        this.sequence.push(this.random());\n        this.x(0);\n\n    }\n\n};\n\n$(document).ready(() => {\n\n\n    game.init();\n});"],"sourceRoot":"/source/"}