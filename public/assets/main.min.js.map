{"version":3,"sources":["main.js","game.js","game_refactor.js"],"names":["game","init","this","cacheDOM","actions","userSeq","sequence","play","playing","timeID","userWaitID","min","max","counter","round","sim","random","Math","floor","$board","$","$audio1","find","$audio2","$audio3","$audio4","$start","$restart","on","bind","sound","_this","console","log","addClass","setTimeout","removeClass","event","num","target","attr","slice","trigger","push","test","clearInterval","startUserTimerWithReset","wait","x","i","_this2","tone","gameSeq","index","_this3","document","ready","cacheDom"],"mappings":"AAAA,YCAA,IAAIA,OACAC,KAAI,WACAC,KAAKC,WACLD,KAAKE,UACLF,KAAKG,WACLH,KAAKI,aAITC,KAAI,WAEAL,KAAKM,SAAU,EACfN,KAAKO,OACLP,KAAKQ,WACLR,KAAKS,IAAM,EACXT,KAAKU,IAAM,EACXV,KAAKW,QAAU,EACfX,KAAKY,MAAQ,EACbZ,KAAKa,IAAI,IAGbC,OAAM,WACF,MAAOC,MAAKC,MAAMD,KAAKD,UAAYd,KAAKU,IAAMV,KAAKS,IAAM,IAAMT,KAAKS,KAGxER,SAAQ,WACJD,KAAKiB,OAAWC,EAAE,eAClBlB,KAAKmB,QAAWnB,KAAKiB,OAAOG,KAAK,WACjCpB,KAAKqB,QAAWrB,KAAKiB,OAAOG,KAAK,WACjCpB,KAAKsB,QAAWtB,KAAKiB,OAAOG,KAAK,WACjCpB,KAAKuB,QAAWvB,KAAKiB,OAAOG,KAAK,WACjCpB,KAAKwB,OAAWxB,KAAKiB,OAAOG,KAAK,UACjCpB,KAAKyB,SAAWzB,KAAKiB,OAAOG,KAAK,aAGrClB,QAAO,WACHF,KAAKwB,OAAOE,GAAG,QAAS1B,KAAKK,KAAKsB,KAAK7B,OACvCE,KAAKiB,OAAOS,GAAG,UAAW,UAAW1B,KAAK4B,MAAMD,KAAK7B,OACrDE,KAAKiB,OAAOS,GAAG,YAAa,UAAW,WDEnC,GAAIG,GAAQ7B,ICDZ8B,SAAQC,IAAI/B,MACZkB,EAAElB,MAAMgC,SAAS,UACjBC,WAAW,WACPf,EAACW,GAAOK,YAAY,WACrB,QAIXN,MAAK,SAACO,GAEF,GAAIC,GAAOlB,EAAEiB,EAAME,QAAQC,KAAK,MAAMC,MAAM,GAC5CvC,MAAK,SAAWoC,GAAKI,QAAQ,QAC7BV,QAAQC,IAAI/B,KAAKW,SACjBX,KAAKG,QAAQsC,KAAKL,GAEfpC,KAAK0C,KAAK1C,KAAKI,SAAUJ,KAAKG,QAASH,KAAKW,WAC3CgC,cAAc3C,KAAKQ,YACnBR,KAAKa,IAAIb,KAAKW,aAKtBiC,wBAAuB,WAChB5C,KAAKQ,YACJmC,cAAc3C,KAAKQ,YACnBR,KAAK6C,QAEL7C,KAAK6C,QAIbC,EAAC,SAACC,GDGE,GAAIC,GAAShD,ICFVA,MAAKI,SAAS2C,IAAM/C,KAAKW,QAAU,GAAKX,KAAKM,UAC5CN,KAAKiD,KAAKF,GACV/C,KAAKW,UAKLX,KAAKO,OAAS0B,WAAW,WACrBe,EAAKnC,IAAIkC,EAAE,IACZ,OAIXE,KAAI,SAACF,GACD/C,KAAK,SAAWA,KAAKI,SAAS2C,IAAIP,QAAQ,QAC1CxC,KAAKiB,OAAOG,KAAK,OAASpB,KAAKI,SAAS2C,IAAIP,QAAQ,cAGxD3B,IAAG,SAACkC,GACA/C,KAAKI,SAASqC,KAAKzC,KAAKc,UACxBd,KAAK8C,EAAEC,IAIXL,KAAI,SAACQ,EAAS/C,EAASgD,GACnB,MAAGD,GAAQC,KAAWhD,EAAQgD,IAC1BnD,KAAKW,SAAW,GACT,IAEJ,GAIXkC,KAAI,WDEA,GAAIO,GAASpD,ICDbA,MAAKQ,WAAayB,WAAW,WACzBH,QAAQC,IAAI,QACZqB,EAAK9C,SAAU,GAChB,MAMXY,GAAEmC,UAAUC,MAAM,WAGdxD,KAAKC,SCrHT,WF0HI,GExHMA,GAAO,WACTwD,IACArD,WAKEqD,EAAW,WACb,GAAItC,GAAWC,EAAE,cACFD,GAAOG,KAAK,WACZH,EAAOG,KAAK,WACZH,EAAOG,KAAK,WACZH,EAAOG,KAAK,WACZH,EAAOG,KAAK,UACZH,EAAOG,KAAK,YAQ/BrB","file":"main.min.js","sourcesContent":["","let game = {\n    init() {\n        this.cacheDOM();\n        this.actions();\n        this.userSeq = [];\n        this.sequence = [];\n    },\n\n\n    play() {\n\n        this.playing = true;\n        this.timeID;\n        this.userWaitID;\n        this.min = 1;\n        this.max = 4;\n        this.counter = 1; // increase this each time\n        this.round = 0;\n        this.sim(0);\n    },\n\n    random() {\n        return Math.floor(Math.random() * (this.max - this.min + 1)) + this.min;\n    },\n\n    cacheDOM() {\n        this.$board   = $('#game-board');\n        this.$audio1  = this.$board.find('#audio1');\n        this.$audio2  = this.$board.find('#audio2');\n        this.$audio3  = this.$board.find('#audio3');\n        this.$audio4  = this.$board.find('#audio4');\n        this.$start   = this.$board.find('#start');\n        this.$restart = this.$board.find('#restart');\n    },\n\n    actions() {\n        this.$start.on('click', this.play.bind(game));\n        this.$board.on('mouseup', '.square', this.sound.bind(game));\n        this.$board.on('mousedown', '.square', function() {\n            console.log(this);\n            $(this).addClass('active');\n            setTimeout(() => {\n                $(this).removeClass('active');\n            }, 700);\n        });\n    },\n\n    sound(event) {\n        // console.log(this.id.slice(-1);\n        let num = ($(event.target).attr('id').slice(-1));\n        this['$audio' + num].trigger('play');\n        console.log(this.counter);\n        this.userSeq.push(num);\n        // this.startUserTimerWithReset();\n        if(this.test(this.sequence, this.userSeq, this.counter)) {\n            clearInterval(this.userWaitID);\n            this.sim(this.counter++);\n        }\n\n    },\n\n    startUserTimerWithReset() {\n        if(this.userWaitID) {\n            clearInterval(this.userWaitID);\n            this.wait();\n        } else {\n            this.wait();\n        }\n    },\n\n    x(i) {\n        if(this.sequence[i] && this.counter > 0 && this.playing) {\n            this.tone(i);\n            this.counter--; // will stop the sim each round\n\n            //this.wait();\n\n\n            this.timeID = setTimeout(() => {\n                this.sim(i+1);\n            }, 1000);\n        }\n    },\n\n    tone(i) {\n        this['$audio' + this.sequence[i]].trigger('play');\n        this.$board.find('#btn' + this.sequence[i]).trigger('mousedown');\n    },\n\n    sim(i) {\n        this.sequence.push(this.random());\n        this.x(i);\n\n    },\n\n    test(gameSeq, userSeq, index) {\n        if(gameSeq[index] === userSeq[index]) {\n            this.counter += 2;\n            return true;\n        }\n        return false;\n\n    },\n\n    wait() {\n        this.userWaitID = setTimeout(() => {\n            console.log('wait');\n            this.playing = false;\n        }, 3000);\n\n    }\n\n};\n\n$(document).ready(() => {\n\n\n    game.init();\n});","(function() {\n\n    const init = () => {\n        cacheDom();\n        actions();\n        let sequence = [];\n        let userSeq = [];\n    };\n\n    const cacheDom = () => {\n        let $board   = $('#game-board');\n        let $audio1  = $board.find('#audio1');\n        let $audio2  = $board.find('#audio2');\n        let $audio3  = $board.find('#audio3');\n        let $audio4  = $board.find('#audio4');\n        let $start   = $board.find('#start');\n        let $restart = $board.find('#restart');\n    };\n\n    const random = () => {\n        return Math.floor(Math.random() * (this.max - this.min + 1)) + this.min;\n    };\n\n\n    init();\n})();\n\n"],"sourceRoot":"/source/"}